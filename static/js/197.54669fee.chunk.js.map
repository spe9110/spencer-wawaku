{"version":3,"file":"static/js/197.54669fee.chunk.js","mappings":"8KAIaA,EAAUC,IACrBC,EAAAA,EAAAA,KAACC,EAAAA,EAAOC,OAAP,CAAcC,GAAI,GAAIC,GAAI,GAAIC,EAAG,GAAIC,KAAK,iBAAkBP,IAG/DD,EAAOS,YAAc,S,cCAd,IAAMC,GAAiBC,EAAAA,EAAAA,IAAU,CACtC,KAAM,CACJC,gBAAiB,SACjBC,iBAAkB,KAEpB,MAAO,CACLD,gBAAiB,WACjBC,iBAAkB,QAEpB,OAAQ,CACND,gBAAiB,WACjBC,iBAAkB,UAITC,GAAmBH,EAAAA,EAAAA,IAAU,CACxC,KAAM,CACJI,UAAW,gBAEb,OAAQ,CACNA,UAAW,qBAImBJ,EAAAA,EAAAA,IAAU,CAC1C,KAAM,CAAEK,KAAM,QACd,OAAQ,CAAEA,KAAM,WAGcL,EAAAA,EAAAA,IAAU,CACxCM,KAAM,CAAEC,mBAAoB,UAC5BC,GAAI,CAAED,mBAAoB,SC3BrB,IAAME,EAASnB,IACpB,MAAM,KAAEoB,EAAA,gBAAMC,KAAoBC,GAAStB,EAC3C,OACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAOqB,IAAP,CACCC,QAAQ,cACRC,MAAO,CACLC,MAAON,EACPO,OAAQP,EACRQ,UAAWP,EAAkB,GAAGR,4BAA8B,MAE5DS,GACN,EAIJH,EAAMX,YAAc,Q,ICuDPqB,GAAmBC,E,QAAAA,IAC9B,CAAC9B,EAAO+B,KAnFV,IAAAC,EAoFI,MAAM,KACJZ,EAAO,OAAM,IACba,EAAM,IAAG,IACTC,EAAM,EAAC,UACPC,EAAA,aACAC,EAAA,MACAC,EAAA,WACAC,EAAA,SACAC,EAAA,UACAC,EAAY,OAAM,MAClBC,EAAQ,UAAS,WACjBC,EAAa,UAAS,gBACtBrB,KACGC,GACDtB,EAEE2C,EF5CH,SAA0BC,GAC/B,MAAM,MACJP,EAAQ,EAAC,IACTH,EAAA,IACAD,EAAA,UACAE,EAAA,aACAC,EAAA,gBACAf,EAAA,KACAwB,EAAO,eACLD,EAEEE,EAjER,SAAwBT,EAAeH,EAAaD,GAClD,OAAwB,KAAfI,EAAQH,IAAeD,EAAMC,EACxC,CA+DkBa,CAAeV,EAAOH,EAAKD,GAS3C,MAAO,CACLe,KAAM,CACJ,qBAAsB3B,EAAkB,QAAK,EAC7C,gBAAiBY,EACjB,gBAAiBC,EACjB,gBAAiBb,OAAkB,EAAYgB,EAC/C,iBAbqBY,MACvB,GAAa,MAATZ,EACJ,MAA+B,oBAAjBD,EACVA,EAAaC,EAAOS,GACpBX,CAAA,EASgBc,GAClBJ,QAEFC,UACAT,QAEJ,CEYqBa,CAAiB,CAChChB,MACAD,MACAI,QACAF,YACAC,eACAf,oBAGI8B,EAAc9B,OAChB,EAC0B,MAAzB,OAAAW,EAAAW,EAASG,SAATd,EAAoB,GAKnBoB,EAAiB/B,EACnB,CACEgC,IAAK,CAAEzB,UAAW,GAAGnB,2BAEvB,CACEG,iBAAkB,GAClBD,gBARW,MAAfwC,OAAsB,EAAY,GAAGA,KAAe,IAAMA,IAStDG,mBAAoB,2BACpBC,mBAAoB,OACpBC,yBAA0B,QAG1BC,EAAgC,CACpCC,QAAS,eACTC,SAAU,WACVC,cAAe,SACfC,SAAUzC,GAGZ,OACE0C,EAAAA,EAAAA,MAAC5D,EAAAA,EAAO6D,IAAP,CACChC,MACAiC,UAAU,qBACNrB,EAASK,QACT1B,EACJG,MAAOgC,EAEPlB,SAAA,EAAAuB,EAAAA,EAAAA,MAAC3C,EAAA,CAAMC,OAAYC,kBACjBkB,SAAA,EAAAtC,EAAAA,EAAAA,KAACF,EAAA,CACCkE,OAAQvB,EACRwB,YAAa1B,EACbwB,UAAU,4BAEZ/D,EAAAA,EAAAA,KAACF,EAAA,CACCkE,OAAQxB,EACRyB,YAAa1B,EACbwB,UAAU,6BACVG,cAAe7B,EAAa,aAAU,EAKtC8B,QAA4B,IAAnBzB,EAASN,OAAgBhB,OAAsB,EAAJ,KAChD+B,OAGPb,IACH,IAKNV,EAAiBrB,YAAc,mBChKxB,IAAM6D,GAAwBnE,EAAAA,EAAAA,GAAO,MAAO,CACjDoE,UAAW,CACTT,SAAU,SACVU,IAAK,MACLxD,KAAM,MACNW,MAAO,OACP8C,UAAW,SACXb,SAAU,WACV7C,UAAW,2BAIfuD,EAAsB7D,YAAc,wB,+BCfpC,MAAMiE,EAAoBC,IAAyC,IAAxC,SAAEC,EAAQ,YAAEC,EAAW,QAAEC,GAASH,EACzD,OAAIC,GAAaA,EAASG,QAKtBC,EAAAA,EAAAA,KAAA,OAAKf,UAAU,uBAAsBzB,SAChCoC,EAASK,KAAI,CAACC,EAAGC,KACdH,EAAAA,EAAAA,KAAA,QAEIf,UAAW,wBAAuBkB,IAAUN,EAAc,SAAW,IACrEC,QAASA,IAAKA,EAAQK,IAFjBA,OAPV,IAcD,EAuDd,EAnDsBC,IAAoC,IAAnC,SAAER,EAAQ,SAAES,EAAW,KAAMD,EAChD,MAAOP,EAAaS,IAAkBC,EAAAA,EAAAA,UAAS,GAEzCC,GAAYC,EAAAA,EAAAA,cAAY,KAC1BH,GAAgBT,GACI,IAAhBA,EAAoBD,EAASG,OAAS,EAAIF,EAAc,GAC3D,GACF,CAACD,EAASG,SAGPW,GAAYD,EAAAA,EAAAA,cAAY,KAC1BH,GAAgBT,GACZA,IAAgBD,EAASG,OAAS,EAAI,EAAIF,EAAc,GAC3D,GACF,CAACD,EAASG,SAGPY,GAAYF,EAAAA,EAAAA,cAAaN,IAC3BG,EAAeH,EAAM,GACtB,IASL,OAPES,EAAAA,EAAAA,YAAU,KACN,MAAMC,EAAmBC,YAAYJ,EAAWL,GAChD,MAAO,KACHU,cAAcF,EAAiB,CAClC,GACF,CAACR,EAAUK,KAGdM,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAzD,SAAA,EACIwC,EAAAA,EAAAA,KAAA,UAAQF,QAASU,EAAWvB,UAAU,oCAAmCzB,UACrEwC,EAAAA,EAAAA,KAACkB,EAAAA,IAAW,OAEhBlB,EAAAA,EAAAA,KAACmB,EAAAA,EAAM,CAAA3D,UACHwC,EAAAA,EAAAA,KAAA,QAAMoB,IAAI,UAAUC,GAAG,QAAQC,KAAM1B,EAASC,QAElDG,EAAAA,EAAAA,KAAA,OAAKuB,IAAK3B,EAASC,GAAc2B,IAAK,SAAS3B,IAAeZ,UAAU,8BAA8BwC,QAAQ,UAE9GzB,EAAAA,EAAAA,KAAA,UAAQF,QAASY,EAAWzB,UAAU,oCAAmCzB,UACrEwC,EAAAA,EAAAA,KAAC0B,EAAAA,IAAY,OAGjB1B,EAAAA,EAAAA,KAACN,EAAiB,CAClBE,SAAUA,EACVC,YAAaA,EACbC,QAASa,MAEV,EC7DP,EANiB,C,qOC0GjB,EA5FmB,CACf,CACIgB,GAAI,EACJC,M,QACAC,MAAO,QAEX,CACIF,GAAI,EACJC,M,QACAC,MAAO,OAEX,CACIF,GAAI,EACJC,M,oEACAC,MAAO,gBAEX,CACIF,GAAI,EACJC,M,8DACAC,MAAO,QAEX,CACIF,GAAI,EACJC,M,QACAC,MAAO,cAEX,CACIF,GAAI,EACJC,M,QACAC,MAAO,YAEX,CACIF,GAAI,EACJC,M,8DACAC,MAAO,UAEX,CACIF,GAAI,EACJC,M,8DACAC,MAAO,UAEX,CACIF,GAAI,EACJC,M,kEACAC,MAAO,aAEX,CACIF,GAAI,GACJC,M,2DACAC,MAAO,OAEX,CACIF,GAAI,GACJC,M,8DACAC,MAAO,UAEX,CACIF,GAAI,GACJC,M,+EACAC,MAAO,UAEX,CACIF,GAAI,GACJC,M,iEACAC,MAAO,aAEX,CACIF,GAAI,GACJC,M,2EACAC,MAAO,WAEX,CACIF,GAAI,GACJC,M,uEACAC,MAAO,YAEX,CACIF,GAAI,GACJC,M,4EACAC,MAAO,iBAEX,CACIF,GAAI,GACJC,M,uEACAC,MAAO,aAEX,CACIF,GAAI,GACJC,M,6DACAC,MAAO,UC7Df,EA/C0B,CACtB,CACIF,GAAI,EACJE,MAAO,OACPC,WAAY,OAEhB,CACIH,GAAI,EACJE,MAAO,MACPC,WAAY,OAEhB,CACIH,GAAI,EACJE,MAAO,eACPC,WAAY,OAEhB,CACIH,GAAI,EACJE,MAAO,OACPC,WAAY,OAEhB,CACIH,GAAI,EACJE,MAAO,aACPC,WAAY,OAEhB,CACIH,GAAI,EACJE,MAAO,WACPC,WAAY,OAEhB,CACIH,GAAI,EACJE,MAAO,SACPC,WAAY,OAEhB,CACIH,GAAI,EACJE,MAAO,SACPC,WAAY,OAEhB,CACIH,GAAI,EACJE,MAAO,YACPC,WAAY,QCZpB,EAhCoB,CAChB,CACIH,GAAI,EACJE,MAAO,YACPC,WAAY,MAEhB,CACIH,GAAI,EACJE,MAAO,UACPC,WAAY,MAEhB,CACIH,GAAI,EACJE,MAAO,WACPC,WAAY,MAEhB,CACIH,GAAI,EACJE,MAAO,gBACPC,WAAY,MAEhB,CACIH,GAAI,EACJE,MAAO,YACPC,WAAY,MAEhB,CACIH,GAAI,EACJE,MAAO,QACPC,WAAY,OCZpB,EAjBc,CACV,CACIH,GAAI,EACJI,KAAM,MACNC,eAAgB,OAEpB,CACIL,GAAI,EACJI,KAAM,SACNC,eAAgB,OAEpB,CACIL,GAAI,EACJI,KAAM,SACNC,eAAgB,Q,kCCCxB,MAAMC,EAAUrC,EAEhB,SAASsC,IACL,MAAM,MAAEC,IAAUC,EAAAA,EAAAA,MACXC,EAAYC,IAAiB/B,EAAAA,EAAAA,UAAS,GAEvCgC,EAAoBC,IACtBF,EAAcE,EAAE,EAGdC,GAAaC,EAAAA,EAAAA,UACbC,GAAKD,EAAAA,EAAAA,UAsBX,OAnBAE,EAAAA,EAAAA,kBAAgB,KACZ,IAAIC,EAAMC,EAAAA,GAAKC,SAAQ,KACnBJ,EAAGK,QAAUF,EAAAA,GAAKG,WACjBhH,KAAK,SAAU,CACZiH,EAAG,QACHC,SAAU,IACV9D,QAAS,MAEZpD,KAAK,QAAS,CACXiH,EAAG,OACHC,SAAU,IACV9D,QAAS,KACT,QAAQ,IAEhB,MAAO,IAAMwD,EAAIO,QAAQ,GAC1B,KAKCpC,EAAAA,EAAAA,MAAA,OAAK/B,UAAW,UAAmB,UAAVkD,EAAoB,YAAc,SAAWnF,IAAKyF,EAAY3E,KAAK,OAAMN,SAAA,EAC9FwC,EAAAA,EAAAA,KAACqD,EAAAA,EAAQ,KACTrC,EAAAA,EAAAA,MAAA,OAAK/B,UAAU,gBAAgB0C,GAAG,QAAOnE,SAAA,EAErCwC,EAAAA,EAAAA,KAAA,OAAKf,UAAU,2BAEfe,EAAAA,EAAAA,KAAA,OAAKf,UAAU,yBAAwBzB,UACnCwC,EAAAA,EAAAA,KAACsD,EAAa,CAAC1D,SAAUqC,EAAShD,UAAU,sCAGpD+B,EAAAA,EAAAA,MAAA,OAAK/B,UAAU,iBAAiB0C,GAAG,OAAMnE,SAAA,EACrCwC,EAAAA,EAAAA,KAAA,MAAIf,UAAU,wBAAuBzB,SAAC,cACtCwD,EAAAA,EAAAA,MAAA,OAAK/B,UAAU,sBAAqBzB,SAAA,EAChCwC,EAAAA,EAAAA,KAAA,UAAQf,UAA0B,IAAfoD,EAAmB,kCAAoC,2BAA4BvC,QAASA,IAAKyC,EAAiB,GAAG/E,SAAC,gBACzIwC,EAAAA,EAAAA,KAAA,UAAQf,UAA0B,IAAfoD,EAAmB,kCAAoC,2BAA4BvC,QAASA,IAAKyC,EAAiB,GAAG/E,SAAC,iBACzIwC,EAAAA,EAAAA,KAAA,UAASf,UAA0B,IAAfoD,EAAmB,oCAAsC,6BAA8BvC,QAASA,IAAKyC,EAAiB,GAAG/E,SAAC,sBAElJwD,EAAAA,EAAAA,MAAA,OAAK/B,UAAU,0BAAyBzB,SAAA,CAEpB,IAAf6E,IAAqBrB,EAAAA,EAAAA,MAAA,OAAK/B,UAAU,gCAA+BzB,SAAA,EAChEwD,EAAAA,EAAAA,MAAA,OAAK/B,UAAU,uCAAsCzB,SAAA,EACjDwC,EAAAA,EAAAA,KAAA,MAAAxC,SAAI,gIACJwC,EAAAA,EAAAA,KAAA,KAAAxC,SAAG,2NAEPwD,EAAAA,EAAAA,MAAA,OAAK/B,UAAU,2CAA0CzB,SAAA,EAErDwC,EAAAA,EAAAA,KAACmB,EAAAA,EAAM,CAAA3D,SACF+F,EAAWtD,KAAKuD,IACbxD,EAAAA,EAAAA,KAAA,QAEIoB,IAAI,UACJE,KAAMkC,EAAM5B,MACZP,GAAG,SAHEmC,EAAM7B,QAOtB4B,EAAWtD,KAAI,CAACuD,EAAOrD,KACpBa,EAAAA,EAAAA,MAAA,OAAoB/B,UAAU,uDAAsDzB,SAAA,EAChFwC,EAAAA,EAAAA,KAAA,OAAKuB,IAAKiC,EAAM5B,MAAOJ,IAAKgC,EAAM7B,GAAIF,QAAQ,UAC9CzB,EAAAA,EAAAA,KAAA,QAAAxC,SAAOgG,EAAM3B,UAFP2B,EAAM7B,YAQZ,IAAfU,IAAqBrB,EAAAA,EAAAA,MAAA,OAAK/B,UAAU,gCAA+BzB,SAAA,EAChEwD,EAAAA,EAAAA,MAAA,OAAK/B,UAAU,6CAA4CzB,SAAA,EACvDwC,EAAAA,EAAAA,KAAA,MAAAxC,SAAI,uBACHiG,EAAkBxD,KAAI,CAACyD,EAAMvD,KAC1Ba,EAAAA,EAAAA,MAAC2C,EAAAA,SAAc,CAAAnG,SAAA,EACXwD,EAAAA,EAAAA,MAAA,OAAK/B,UAAU,4DAA2DzB,SAAA,EACtEwC,EAAAA,EAAAA,KAAA,KAAAxC,SAAIkG,EAAK7B,SACT7B,EAAAA,EAAAA,KAAA,KAAAxC,SAAIkG,EAAK5B,iBAGb9B,EAAAA,EAAAA,KAAA,OAAKf,UAAU,uDAAsDzB,UACjEwC,EAAAA,EAAAA,KAAA,OAAKf,UAAU,uEAAuE2E,MAAO,CAACjH,MAAO+G,EAAK5B,kBAP7F4B,EAAK/B,UAYlCX,EAAAA,EAAAA,MAAA,OAAK/B,UAAU,sCAAqCzB,SAAA,EAChDwC,EAAAA,EAAAA,KAAA,MAAAxC,SAAI,iBACHqG,EAAM5D,KAAI,CAACyD,EAAMvD,KACda,EAAAA,EAAAA,MAAC2C,EAAAA,SAAc,CAAAnG,SAAA,EACXwD,EAAAA,EAAAA,MAAA,OAAK/B,UAAU,oDAAmDzB,SAAA,EAC9DwC,EAAAA,EAAAA,KAAA,KAAAxC,SAAIkG,EAAK3B,QACT/B,EAAAA,EAAAA,KAAA,KAAAxC,SAAIkG,EAAK1B,qBAEbhC,EAAAA,EAAAA,KAAA,OAAKf,UAAU,gDAA+CzB,UAC1DwC,EAAAA,EAAAA,KAAA,OAAKf,UAAU,gEAAgE2E,MAAO,CAACjH,MAAO+G,EAAK1B,sBANtF0B,EAAK/B,YActB,IAAfU,IAAqBrC,EAAAA,EAAAA,KAAA,OAAKf,UAAU,uCAAsCzB,UACvEwD,EAAAA,EAAAA,MAAA,OAAK/B,UAAU,gDAA+CzB,SAAA,EAC1DwC,EAAAA,EAAAA,KAAA,MAAAxC,SAAI,kBACJwC,EAAAA,EAAAA,KAAA,OAAKf,UAAU,qDAAoDzB,SAC9DsG,EAAY7D,KAAK8D,IACd/D,EAAAA,EAAAA,KAAC2D,EAAAA,SAAc,CAAAnG,UACXwD,EAAAA,EAAAA,MAAClE,EAAgB,CAACQ,MAAO,GAAGyG,EAAKjC,aAAczF,KAAK,OAAOqB,MAAM,UAAUuB,UAAU,+DAA8DzB,SAAA,EAC/IwC,EAAAA,EAAAA,KAACV,EAAqB,CAAA9B,SAAE,GAAGuG,EAAKjC,iBAChC9B,EAAAA,EAAAA,KAAA,KAAGf,UAAU,sEAAqEzB,SAAEuG,EAAKlC,YAH3EkC,EAAKpC,qBAc/D,CACA,SAAeqC,EAAAA,EAAAA,MAAK9B,E,+DChJpB,MAUA,EAViBmB,KAETrC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAzD,SAAA,EACIwC,EAAAA,EAAAA,KAAA,OAAKf,UAAU,YACfe,EAAAA,EAAAA,KAAA,OAAKf,UAAU,YACfe,EAAAA,EAAAA,KAAA,OAAKf,UAAU,a","sources":["../node_modules/@chakra-ui/progress/src/circle.tsx","../node_modules/@chakra-ui/progress/src/progress.utils.tsx","../node_modules/@chakra-ui/progress/src/shape.tsx","../node_modules/@chakra-ui/progress/src/circular-progress.tsx","../node_modules/@chakra-ui/progress/src/circular-progress-label.tsx","component/Main/PictureProfil.js","component/Main/DataMain/PictureData.js","component/Main/DataMain/AllSkills.js","component/Main/DataMain/ProgrammingSkills.js","component/Main/DataMain/OtherSkills.js","component/Main/DataMain/ToolsData.js","component/Main/About.js","component/Main/UxDesign.js"],"sourcesContent":["import { HTMLChakraProps, chakra } from \"@chakra-ui/system\"\n\ninterface CircleProps extends HTMLChakraProps<\"circle\"> {}\n\nexport const Circle = (props: CircleProps) => (\n  <chakra.circle cx={50} cy={50} r={42} fill=\"transparent\" {...props} />\n)\n\nCircle.displayName = \"Circle\"\n","import { keyframes } from \"@chakra-ui/system\"\n\nfunction valueToPercent(value: number, min: number, max: number) {\n  return ((value - min) * 100) / (max - min)\n}\n\ntype Keyframe = ReturnType<typeof keyframes>\n\nexport const spin: Keyframe = keyframes({\n  \"0%\": {\n    strokeDasharray: \"1, 400\",\n    strokeDashoffset: \"0\",\n  },\n  \"50%\": {\n    strokeDasharray: \"400, 400\",\n    strokeDashoffset: \"-100\",\n  },\n  \"100%\": {\n    strokeDasharray: \"400, 400\",\n    strokeDashoffset: \"-260\",\n  },\n})\n\nexport const rotate: Keyframe = keyframes({\n  \"0%\": {\n    transform: \"rotate(0deg)\",\n  },\n  \"100%\": {\n    transform: \"rotate(360deg)\",\n  },\n})\n\nexport const progress: Keyframe = keyframes({\n  \"0%\": { left: \"-40%\" },\n  \"100%\": { left: \"100%\" },\n})\n\nexport const stripe: Keyframe = keyframes({\n  from: { backgroundPosition: \"1rem 0\" },\n  to: { backgroundPosition: \"0 0\" },\n})\n\nexport interface GetProgressPropsOptions {\n  value?: number\n  min: number\n  max: number\n  valueText?: string\n  getValueText?(value: number, percent: number): string\n  isIndeterminate?: boolean\n  role?: React.AriaRole\n}\n\n/**\n * Get the common `aria-*` attributes for both the linear and circular\n * progress components.\n */\nexport function getProgressProps(options: GetProgressPropsOptions) {\n  const {\n    value = 0,\n    min,\n    max,\n    valueText,\n    getValueText,\n    isIndeterminate,\n    role = \"progressbar\",\n  } = options\n\n  const percent = valueToPercent(value, min, max)\n\n  const getAriaValueText = () => {\n    if (value == null) return undefined\n    return typeof getValueText === \"function\"\n      ? getValueText(value, percent)\n      : valueText\n  }\n\n  return {\n    bind: {\n      \"data-indeterminate\": isIndeterminate ? \"\" : undefined,\n      \"aria-valuemax\": max,\n      \"aria-valuemin\": min,\n      \"aria-valuenow\": isIndeterminate ? undefined : value,\n      \"aria-valuetext\": getAriaValueText(),\n      role,\n    },\n    percent,\n    value,\n  }\n}\n","import { HTMLChakraProps, chakra } from \"@chakra-ui/system\"\n\nimport { rotate } from \"./progress.utils\"\n\ninterface ShapeProps extends HTMLChakraProps<\"svg\"> {\n  size?: string | number\n  /**\n   * @default false\n   */\n  isIndeterminate?: boolean\n}\n\nexport const Shape = (props: ShapeProps) => {\n  const { size, isIndeterminate, ...rest } = props\n  return (\n    <chakra.svg\n      viewBox=\"0 0 100 100\"\n      __css={{\n        width: size,\n        height: size,\n        animation: isIndeterminate ? `${rotate} 2s linear infinite` : undefined,\n      }}\n      {...rest}\n    />\n  )\n}\n\nShape.displayName = \"Shape\"\n","import {\n  chakra,\n  SystemStyleObject,\n  HTMLChakraProps,\n  forwardRef,\n} from \"@chakra-ui/system\"\n\nimport { getProgressProps, spin } from \"./progress.utils\"\nimport { Shape } from \"./shape\"\nimport { Circle } from \"./circle\"\n\ninterface CircularProgressOptions {\n  /**\n   * The size of the circular progress in CSS units\n   */\n  size?: string | number\n  /**\n   * Maximum value defining 100% progress made (must be higher than 'min')\n   * @default 100\n   */\n  max?: number\n  /**\n   * Minimum value defining 'no progress' (must be lower than 'max')\n   * @default 0\n   */\n  min?: number\n  /**\n   * This defines the stroke width of the svg circle.\n   * @default \"10px\"\n   */\n  thickness?: string | number\n  /**\n   * Current progress (must be between min/max)\n   */\n  value?: number\n  /**\n   * If `true`, the cap of the progress indicator will be rounded.\n   *\n   * @default false\n   */\n  capIsRound?: boolean\n  /**\n   * The content of the circular progress bar. If passed, the content will be inside and centered in the progress bar.\n   */\n  children?: React.ReactNode\n  /**\n   * The color name of the progress track. Use a color key in the theme object\n   */\n  trackColor?: string\n  /**\n   * The color of the progress indicator. Use a color key in the theme object\n   */\n  color?: string\n  /**\n   * The desired valueText to use in place of the value\n   */\n  valueText?: string\n  /**\n   * A function that returns the desired valueText to use in place of the value\n   */\n  getValueText?(value: number, percent: number): string\n  /**\n   * If `true`, the progress will be indeterminate and the `value`\n   * prop will be ignored\n   *\n   * @default false\n   */\n  isIndeterminate?: boolean\n}\n\nexport interface CircularProgressProps\n  extends Omit<HTMLChakraProps<\"div\">, \"color\">,\n    CircularProgressOptions {}\n\n/**\n * CircularProgress is used to indicate the progress of an activity.\n * It is built using `svg` and `circle` components with support for\n * theming and `indeterminate` state\n *\n * @see Docs https://chakra-ui.com/circularprogress\n * @todo add theming support for circular progress\n */\nexport const CircularProgress = forwardRef<CircularProgressProps, \"div\">(\n  (props, ref) => {\n    const {\n      size = \"48px\",\n      max = 100,\n      min = 0,\n      valueText,\n      getValueText,\n      value,\n      capIsRound,\n      children,\n      thickness = \"10px\",\n      color = \"#0078d4\",\n      trackColor = \"#edebe9\",\n      isIndeterminate,\n      ...rest\n    } = props\n\n    const progress = getProgressProps({\n      min,\n      max,\n      value,\n      valueText,\n      getValueText,\n      isIndeterminate,\n    })\n\n    const determinant = isIndeterminate\n      ? undefined\n      : (progress.percent ?? 0) * 2.64\n\n    const strokeDasharray =\n      determinant == null ? undefined : `${determinant} ${264 - determinant}`\n\n    const indicatorProps = isIndeterminate\n      ? {\n          css: { animation: `${spin} 1.5s linear infinite` },\n        }\n      : {\n          strokeDashoffset: 66,\n          strokeDasharray,\n          transitionProperty: \"stroke-dasharray, stroke\",\n          transitionDuration: \"0.6s\",\n          transitionTimingFunction: \"ease\",\n        }\n\n    const rootStyles: SystemStyleObject = {\n      display: \"inline-block\",\n      position: \"relative\",\n      verticalAlign: \"middle\",\n      fontSize: size,\n    }\n\n    return (\n      <chakra.div\n        ref={ref}\n        className=\"chakra-progress\"\n        {...progress.bind}\n        {...rest}\n        __css={rootStyles}\n      >\n        <Shape size={size} isIndeterminate={isIndeterminate}>\n          <Circle\n            stroke={trackColor}\n            strokeWidth={thickness}\n            className=\"chakra-progress__track\"\n          />\n          <Circle\n            stroke={color}\n            strokeWidth={thickness}\n            className=\"chakra-progress__indicator\"\n            strokeLinecap={capIsRound ? \"round\" : undefined}\n            /**\n             * fix issue in Safari where indicator still shows when value is 0\n             * @see Issue https://github.com/chakra-ui/chakra-ui/issues/3754\n             */\n            opacity={progress.value === 0 && !isIndeterminate ? 0 : undefined}\n            {...indicatorProps}\n          />\n        </Shape>\n        {children}\n      </chakra.div>\n    )\n  },\n)\n\nCircularProgress.displayName = \"CircularProgress\"\n","import { chakra, HTMLChakraProps } from \"@chakra-ui/system\"\n\nexport interface CircularProgressLabelProps extends HTMLChakraProps<\"div\"> {}\n\n/**\n * CircularProgress component label. In most cases it is a numeric indicator\n * of the circular progress component's value\n */\nexport const CircularProgressLabel = chakra(\"div\", {\n  baseStyle: {\n    fontSize: \"0.24em\",\n    top: \"50%\",\n    left: \"50%\",\n    width: \"100%\",\n    textAlign: \"center\",\n    position: \"absolute\",\n    transform: \"translate(-50%, -50%)\",\n  },\n})\n\nCircularProgressLabel.displayName = \"CircularProgressLabel\"\n","import React, { useState, useEffect, useCallback } from 'react';\r\nimport { FaArrowLeft, FaArrowRight } from \"react-icons/fa\";\r\nimport './MainSass/index_main.css';\r\nimport { Helmet} from \"react-helmet\";\r\n\r\nconst CarouselIndicator = ({ pictures, activeIndex, onClick }) => {\r\n    if(!pictures || !pictures.length){\r\n        return null; // Render nothing if images is null or empty\r\n    }\r\n\r\n    return (\r\n        <div className=\"carousel__indicators\" >\r\n            {pictures.map((_, index) => (\r\n                <span\r\n                    key={index}\r\n                    className={`carousel__indicator ${index === activeIndex ? 'active' : ''}`}\r\n                    onClick={()=> onClick(index)}\r\n                >\r\n\r\n                </span>\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst PictureProfil = ({ pictures, interval = 3000 }) => {\r\n    const [activeIndex, setActiveIndex] = useState(0);\r\n    // handle Prevous function\r\n    const prevSlide = useCallback(() => {\r\n        setActiveIndex((activeIndex) =>\r\n            activeIndex === 0 ? pictures.length - 1 : activeIndex - 1\r\n        );\r\n    }, [pictures.length]);\r\n\r\n    // handle next function\r\n    const nextSlide = useCallback(() => {\r\n        setActiveIndex((activeIndex) =>\r\n            activeIndex === pictures.length - 1 ? 0 : activeIndex + 1\r\n        );\r\n    }, [pictures.length]);\r\n\r\n    // go to slide indicator\r\n    const goToSlide = useCallback((index) => {\r\n        setActiveIndex(index);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const autoPlayInterval = setInterval(nextSlide, interval);\r\n        return () => {\r\n            clearInterval(autoPlayInterval)\r\n        };\r\n    }, [interval, nextSlide]);\r\n\r\n  return (\r\n    <>\r\n        <button onClick={prevSlide} className='carousel__btn carousel__btn--prev'>\r\n            <FaArrowLeft/>\r\n        </button>\r\n        <Helmet>\r\n            <link rel=\"preload\" as=\"image\" href={pictures[activeIndex]} />\r\n        </Helmet>\r\n        <img src={pictures[activeIndex]} alt={`slide ${activeIndex}`} className=\"About__slider__picture__img\" loading='lazy' />\r\n\r\n        <button onClick={nextSlide} className='carousel__btn carousel__btn--next'>\r\n            <FaArrowRight/>\r\n        </button>\r\n\r\n        <CarouselIndicator\r\n        pictures={pictures}\r\n        activeIndex={activeIndex}\r\n        onClick={goToSlide}\r\n        />\r\n    </>\r\n    )\r\n}\r\n\r\nexport default PictureProfil;\r\n","import spencer from '../Images/avatar-spencer.webp';\r\nimport profil1 from '../Images/profile1.webp';\r\nimport spencer3 from '../Images/spencer3.webp';\r\nimport spencer5 from '../Images/spencer5.webp';\r\n\r\nconst pictures = [\r\n    spencer,\r\n    profil1,\r\n    spencer3,\r\n    spencer5\r\n]\r\nexport default pictures;","import Html from '../Images/icons8-html-48.webp'; \r\nimport Css from '../Images/icons8-css-48.webp'; \r\nimport Tailwind from '../Images/icons8-tailwind-css-48.webp'; \r\nimport Sass from '../Images/icons8-toupet-48.webp'; \r\nimport Javascript from '../Images/icons8-javascript-48.webp'; \r\nimport React from '../Images/icons8-react-native-48.webp'; \r\nimport Jquery from '../Images/icons8-jquery-50.webp';\r\nimport Node from '../Images/icons8-nodejs-48.webp';\r\nimport Express from '../Images/icons8-express-js-50.webp';\r\nimport Git from '../Images/icons8-git-48.webp'; \r\nimport Github from '../Images/icons8-github-50.webp'; \r\nimport Vscode from '../Images/icons8-code-studio-visuel-2019-48.webp'; \r\nimport WordPress from '../Images/icons8-wordpress-50.webp'; \r\nimport Word from '../Images/icons8-microsoft-word-2019-48.webp'; \r\nimport Excel from '../Images/icons8-microsoft-excel-48.webp'; \r\nimport PowerPoint from '../Images/icons8-microsoft-powerpoint-48.webp'; \r\nimport Photoshop from '../Images/icons8-adobe-photoshop-48.webp'; \r\nimport Canva from '../Images/icons8-toile-48.webp'; \r\n\r\nconst knowledges = [\r\n    {\r\n        id: 1,\r\n        image: Html,\r\n        title: \"HTML\"\r\n    },\r\n    {\r\n        id: 2,\r\n        image: Css,\r\n        title: \"CSS\"\r\n    },\r\n    {\r\n        id: 3,\r\n        image: Tailwind,\r\n        title: \"Tailwind CSS\"\r\n    },\r\n    {\r\n        id: 4,\r\n        image: Sass,\r\n        title: \"Sass\"\r\n    },\r\n    {\r\n        id: 5,\r\n        image: Javascript,\r\n        title: \"JavaScript\"\r\n    },\r\n    {\r\n        id: 6,\r\n        image: React,\r\n        title: \"React JS\"\r\n    },\r\n    {\r\n        id: 7,\r\n        image: Jquery,\r\n        title: \"Jquery\"\r\n    },\r\n    {\r\n        id: 8,\r\n        image: Node,\r\n        title: \"NodeJS\"\r\n    },\r\n    {\r\n        id: 9,\r\n        image: Express,\r\n        title: \"ExpressJS\"\r\n    },\r\n    {\r\n        id: 10,\r\n        image: Git,\r\n        title: \"Git\"\r\n    },\r\n    {\r\n        id: 11,\r\n        image: Github,\r\n        title: \"Github\"\r\n    },\r\n    {\r\n        id: 12,\r\n        image: Vscode,\r\n        title: \"VSCode\"\r\n    },\r\n    {\r\n        id: 13,\r\n        image: WordPress,\r\n        title: \"WordPress\"\r\n    },\r\n    {\r\n        id: 14,\r\n        image: Word,\r\n        title: \"Ms Word\"\r\n    },\r\n    {\r\n        id: 15,\r\n        image: Excel,\r\n        title: \"Ms Excel\"\r\n    },\r\n    {\r\n        id: 16,\r\n        image: PowerPoint,\r\n        title: \"Ms PowerPoint\"\r\n    },\r\n    {\r\n        id: 17,\r\n        image: Photoshop,\r\n        title: \"Photoshop\"\r\n    },\r\n    {\r\n        id: 18,\r\n        image: Canva,\r\n        title: \"Canva\"\r\n    },\r\n]\r\nexport default knowledges;\r\n","const programmingSkills = [\r\n    {\r\n        id: 1,\r\n        title: \"HTML\",\r\n        percentage: \"95%\"\r\n    },\r\n    {\r\n        id: 2,\r\n        title: \"CSS\",\r\n        percentage: \"95%\"\r\n    },\r\n    {\r\n        id: 3,\r\n        title: \"Tailwind CSS\",\r\n        percentage: \"90%\"\r\n    },\r\n    {\r\n        id: 4,\r\n        title: \"Sass\",\r\n        percentage: \"75%\"\r\n    },\r\n    {\r\n        id: 5,\r\n        title: \"JavaScript\",\r\n        percentage: \"70%\"\r\n    },\r\n    {\r\n        id: 6,\r\n        title: \"React JS\",\r\n        percentage: \"65%\"\r\n    },\r\n    {\r\n        id: 7,\r\n        title: \"Jquery\",\r\n        percentage: \"65%\"\r\n    },\r\n    {\r\n        id: 8,\r\n        title: \"NodeJS\",\r\n        percentage: \"55%\"\r\n    },\r\n    {\r\n        id: 9,\r\n        title: \"ExpressJS\",\r\n        percentage: \"55%\"\r\n    }\r\n]\r\nexport default programmingSkills;\r\n","const otherSkills = [\r\n    {\r\n        id: 1,\r\n        title: \"WordPress\",\r\n        percentage: \"95\"\r\n    },\r\n    {\r\n        id: 2,\r\n        title: \"Ms Word\",\r\n        percentage: \"95\"\r\n    },\r\n    {\r\n        id: 3,\r\n        title: \"Ms Excel\",\r\n        percentage: \"75\"\r\n    },\r\n    {\r\n        id: 4,\r\n        title: \"Ms PowerPoint\",\r\n        percentage: \"85\",\r\n    },\r\n    {\r\n        id: 5,\r\n        title: \"Photoshop\",\r\n        percentage: \"65\"\r\n    },\r\n    {\r\n        id: 6,\r\n        title: \"Canva\",\r\n        percentage: \"95\"\r\n    }\r\n]\r\nexport default otherSkills;\r\n","const tools = [\r\n    {\r\n        id: 1,\r\n        tool: \"Git\",\r\n        toolpercentage: \"80%\"\r\n    },\r\n    {\r\n        id: 2,\r\n        tool: \"Github\",\r\n        toolpercentage: \"80%\"\r\n    },\r\n    {\r\n        id: 3,\r\n        tool: \"VSCode\",\r\n        toolpercentage: \"90%\"\r\n    }\r\n]\r\nexport default tools; ","import React,{ useState, useRef, useLayoutEffect, memo }  from 'react';\r\nimport { CircularProgress, CircularProgressLabel } from '@chakra-ui/react';\r\nimport './MainSass/index_main.css';\r\nimport PictureProfil from './PictureProfil';\r\nimport pictures from './DataMain/PictureData';\r\nimport knowledges from './DataMain/AllSkills';\r\nimport programmingSkills from './DataMain/ProgrammingSkills';\r\nimport otherSkills from './DataMain/OtherSkills';\r\nimport tools from './DataMain/ToolsData';\r\nimport { useTheme } from '../Header/DarkMode';\r\nimport gsap from 'gsap';\r\nimport { Helmet} from \"react-helmet\";\r\nimport UxDesign from './UxDesign';\r\n\r\n// picture variables\r\nconst picture = pictures;\r\n\r\nfunction About(){\r\n    const { theme } = useTheme();\r\n    const [showSkills, setShowSkills] = useState(1);\r\n    \r\n    const handleShowSkills = (e) => {\r\n        setShowSkills(e)\r\n    }\r\n\r\n    const aboutAnime = useRef();\r\n    const tl = useRef();\r\n\r\n    // typically it's best to useLayoutEffect() instead of useEffect() to have React render the initial state properly from the very start.\r\n    useLayoutEffect(() => {\r\n        let ctx = gsap.context(() => {\r\n            tl.current = gsap.timeline()\r\n            .from(\"#photo\", {\r\n                x: \"-100%\",\r\n                duration: 1.8, \r\n                opacity: 0.01,\r\n            })\r\n            .from(\"#stat\", {\r\n                x: \"100%\",\r\n                duration: 1.8, \r\n                opacity: 0.01,\r\n            },  \"-=1.5\")\r\n        });\r\n        return () => ctx.revert();\r\n    }, []);\r\n\r\n    // const apiKey = \"https://ik.imagekit.io/spencer/\"\r\n\r\n    return(\r\n        <div className={`About ${theme === 'light' ? 'dark-mode' : 'light'}`} ref={aboutAnime} role='main'>\r\n            <UxDesign />\r\n            <div className=\"About__slider\" id='photo'>\r\n                {/* design */}\r\n                <div className=\"About__slider__design\"></div>\r\n                {/* picture slider*/}\r\n                <div className=\"About__slider__picture\">\r\n                    <PictureProfil pictures={picture} className=\"About__slider__picture__img\" />\r\n                </div>\r\n            </div>\r\n            <div className=\"About__content\" id='stat'>\r\n                <h3 className=\"About__content__title\">About me</h3>\r\n                <div className=\"About__content__btn\">\r\n                    <button className={showSkills === 1 ? \"About__content__btn__one active\" : \"About__content__btn__one\"} onClick={()=> handleShowSkills(1)}>All skills</button>\r\n                    <button className={showSkills === 2 ? \"About__content__btn__two active\" : \"About__content__btn__two\"} onClick={()=> handleShowSkills(2)}>Programming</button>\r\n                    <button  className={showSkills === 3 ? \"About__content__btn__three active\" : \"About__content__btn__three\"} onClick={()=> handleShowSkills(3)}>Others skills</button>\r\n                </div>\r\n                <div className=\"About__content__wrapper\">\r\n                    {/* info */}\r\n                    {showSkills === 1 && (<div className=\"About__content__wrapper__info\">\r\n                        <div className=\"About__content__wrapper__info__intro\">\r\n                            <h3>I'm Spencer Wawaku, I am a junior Full-Stack Developer freelance based in Rennes at France and I'm a Icodethis Pro member.</h3>\r\n                            <p>I create responsive and user-friendly websites that combine exceptional user interfaces with optimal performance and superior quality.  I am here to provide you with customized solutions tailored to your needs.</p>\r\n                        </div>\r\n                        <div className=\"About__content__wrapper__info__knowledge\">\r\n                            {/* Helmet to preload the largest contentful paint image in React */}\r\n                            <Helmet>\r\n                                {knowledges.map((skill) => (\r\n                                    <link\r\n                                        key={skill.id}\r\n                                        rel=\"preload\"\r\n                                        href={skill.image}\r\n                                        as=\"image\"\r\n                                    />\r\n                                ))}\r\n                            </Helmet>\r\n                            {knowledges.map((skill, index) => (\r\n                                <div key={skill.id} className=\"About__content__wrapper__info__knowledge__list-skill\">\r\n                                    <img src={skill.image} alt={skill.id} loading='lazy' />\r\n                                    <span>{skill.title}</span>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    </div>)}\r\n                    {/* skill hide*/}\r\n                    {showSkills === 2 && (<div className=\"About__content__wrapper__prog\">\r\n                        <div className=\"About__content__wrapper__prog__programming\">\r\n                            <h4>Programming skills</h4>\r\n                            {programmingSkills.map((prog, index) => (\r\n                                <React.Fragment key={prog.id}>\r\n                                    <div className='About__content__wrapper__prog__programming__skill-content'>\r\n                                        <p>{prog.title}</p>\r\n                                        <p>{prog.percentage}</p>\r\n                                    </div>\r\n\r\n                                    <div className='About__content__wrapper__prog__programming__skill-bg'>\r\n                                        <div className='About__content__wrapper__prog__programming__skill-bg__skill-progress' style={{width: prog.percentage}}></div>    \r\n                                    </div>\r\n                                </React.Fragment>\r\n                            ))}                            \r\n                        </div>\r\n                        <div className=\"About__content__wrapper__prog__tool\">\r\n                            <h4>Tools skills</h4>\r\n                            {tools.map((prog, index) => (\r\n                                <React.Fragment key={prog.id}>\r\n                                    <div className=\"About__content__wrapper__prog__tool__tool-content\">\r\n                                        <p>{prog.tool}</p>\r\n                                        <p>{prog.toolpercentage}</p>\r\n                                    </div>\r\n                                    <div className='About__content__wrapper__prog__tool__skill-bg'>\r\n                                        <div className='About__content__wrapper__prog__tool__skill-bg__skill-progress' style={{width: prog.toolpercentage}}></div>    \r\n                                    </div>\r\n                                </React.Fragment>\r\n                                \r\n                            ))}                            \r\n                        </div>\r\n                    </div>)}\r\n                    {/* skill hide*/}\r\n                    {showSkills === 3 && (<div className=\"About__content__wrapper__other-skill\">\r\n                        <div className=\"About__content__wrapper__other-skill__content\">\r\n                            <h4>Other skills</h4>\r\n                            <div className=\"About__content__wrapper__other-skill__content__box\">\r\n                                {otherSkills.map((Item) => (\r\n                                    <React.Fragment  key={Item.id}>\r\n                                        <CircularProgress value={`${Item.percentage}`} size='6rem' color='#1d4ed8' className=\"About__content__wrapper__other-skill__content__box__CircleBg\">\r\n                                            <CircularProgressLabel>{`${Item.percentage}%`}</CircularProgressLabel>\r\n                                            <p className=\"About__content__wrapper__other-skill__content__box__CircleBg__title\">{Item.title}</p>\r\n                                        </CircularProgress>\r\n                                    </React.Fragment>\r\n                                ))}\r\n                            </div>                           \r\n                        </div>\r\n                    </div>)}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )       \r\n}\r\nexport default memo(About)\r\n//  \"-=1.5\" the both items start animation at the same time","import React from 'react';\r\nimport './MainSass/index_main.css';\r\n\r\nconst UxDesign = () => {\r\n    return (\r\n        <>\r\n            <div className='Design'></div>\r\n            <div className='Design'></div>\r\n            <div className='Design'></div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UxDesign;\r\n"],"names":["Circle","props","jsx","chakra","circle","cx","cy","r","fill","displayName","spin","keyframes","strokeDasharray","strokeDashoffset","rotate","transform","left","from","backgroundPosition","to","Shape","size","isIndeterminate","rest","svg","viewBox","__css","width","height","animation","CircularProgress","forwardRef","ref","_a","max","min","valueText","getValueText","value","capIsRound","children","thickness","color","trackColor","progress","options","role","percent","valueToPercent","bind","getAriaValueText","getProgressProps","determinant","indicatorProps","css","transitionProperty","transitionDuration","transitionTimingFunction","rootStyles","display","position","verticalAlign","fontSize","jsxs","div","className","stroke","strokeWidth","strokeLinecap","opacity","CircularProgressLabel","baseStyle","top","textAlign","CarouselIndicator","_ref","pictures","activeIndex","onClick","length","_jsx","map","_","index","_ref2","interval","setActiveIndex","useState","prevSlide","useCallback","nextSlide","goToSlide","useEffect","autoPlayInterval","setInterval","clearInterval","_jsxs","_Fragment","FaArrowLeft","Helmet","rel","as","href","src","alt","loading","FaArrowRight","id","image","title","percentage","tool","toolpercentage","picture","About","theme","useTheme","showSkills","setShowSkills","handleShowSkills","e","aboutAnime","useRef","tl","useLayoutEffect","ctx","gsap","context","current","timeline","x","duration","revert","UxDesign","PictureProfil","knowledges","skill","programmingSkills","prog","React","style","tools","otherSkills","Item","memo"],"sourceRoot":""}